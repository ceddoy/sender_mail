version: "3.8"
services:
    db:
        image: postgres:latest
        ports:
            - '5432:5432'
        volumes:
            -   ./data/db:/var/lib/psql
        environment:
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_HOST: '${POSTGRES_HOST}'
            POSTGRES_PORT: '${POSTGRES_PORT}'
    rabbitmq3:
        container_name: "rabbitmq"
        image: rabbitmq:3.8-management-alpine
        environment:
            RABBITMQ_DEFAULT_USER: '${RABBITMQ_DEFAULT_USER}'
            RABBITMQ_DEFAULT_PASS: '${RABBITMQ_DEFAULT_PASS}'
            RABBITMQ_HOST: '${RABBITMQ_HOST}'
            RABBITMQ_PORT: '${RABBITMQ_PORT}'
        ports:
            - '5672:5672'
            - '15672:15672'
    app:
        container_name: sender_mail
        build:
            context: ./sender_mail
            dockerfile: Dockerfile
        command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        volumes:
            -   ./sender_mail:/app_work
        env_file:
            -   .env
        restart: always
        ports:
            -   '8000:8000'
        depends_on:
            - db
    celery:
        build:
            context: ./sender_mail
            dockerfile: Dockerfile
        command: sh -c "
            sleep 5 &&
            celery -A sender_mail worker -B"
        volumes:
            -   ./sender_mail:/app_work
        env_file:
            -   .env
        links:
            -   rabbitmq3
        depends_on:
            -   rabbitmq3
    consumer:
        container_name: consumer
        command: sh -c "
                 sleep 5 &&
                 python consume.py"
        build:
            context: ./receiver
            dockerfile: Dockerfile
        restart: always
        env_file:
            -   .env
        ports:
            -   '8011:8011'
        depends_on:
            -   rabbitmq3
